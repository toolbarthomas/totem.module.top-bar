.top-bar {
    position: relative;
    left: 0;
    width: 100%;

    &.js__top-bar--ready {
        top: 0;

        @if map-get($top-bar-features, 'is-sticky') {
            position: fixed;
        } @else {
            position: absolute;
        }

        @if get-setting($top-bar-features, 'transitions', 'transition') {
            transition: get-setting($top-bar-features, 'transitions', 'transition');
        }
    }

    @if map-get($top-bar-features, 'is-sticky') and map-get($top-bar-features, 'can-autohide') {
        &.js__top-bar--autohide {
            opacity: 0;
            visibility: hidden;
            transform: translateY(-100%);

            @if get-setting($top-bar-features, 'transitions', 'transition--autohide') {
                transition: get-setting($top-bar-features, 'transitions', 'transition--autohide');
            }
        }

        @if map-get($top-bar-features, 'can-peek') {
            &.js__top-bar--peek {
                opacity: 1;
                visibility: visible;
                transform: translateY(0);

                @if get-setting($top-bar-features, 'transitions', 'transition--peek') {
                    transition: get-setting($top-bar-features, 'transitions', 'transition--peek');
                }
            }
        }

        &.js__top-bar--reset {
            &,
            * {
                transition: none !important;
            }
        }
    }
}

@if mixin-exists('extend-styles') {
    @warn 'ouput';
    @include extend-styles($top-bar-styles);
}